<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>back = instance_create(250,room_height-150,obj_button);
back.label = 'Cancel';

ready = instance_create(room_width-250,room_height-150,obj_button);
ready.label = 'Ready';
ready.height = 140;

defaultText = 'Waiting on Join';
playerName[0] = defaultText;
playerName[1] = defaultText;


readyTrigger = 0;
readiness = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (back.trigger) {
    if (instance_exists(global.server)) instance_destroy(global.server);
    if (instance_exists(global.client)) instance_destroy(global.client);
    if (instance_exists(obj_player)) instance_destroy(obj_player);
    TransitionRoom(rm_menu);
    back.trigger = 0;
}

if (ready.trigger) {
    // toggle readiness
    readiness += 1;
    readiness = readiness mod 2;
    
    // button color
    /*if (readiness == 0) ready.image_blend = c_gray;
    else ready.image_blend = c_white;*/
    
    readyTrigger = 1;
    ready.trigger = 0;
}

if (instance_exists(obj_player)) {
    for (var i=0; i&lt;ds_list_size(global.client.players); i++) {
        var p = global.client.players[|i];
        var r = '';
        if (p.ready) r = ' (READY)';
        playerName[i] = defaultText;
        if (i == 0 || i == 1) playerName[i] = p.name + r;
    }
    //playerName[0] = obj_player.name;
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
// Draw title
SetText(fontHeading1,c_white,fa_center,fa_top);
draw_text(room_width/2,15,'Lobby');

// Draw VS
var vsY = 245;
SetText(fontHeading1,c_ltgray,fa_center,fa_middle);
draw_text(room_width/2,vsY-10,'VS');

// Draw player names
var vsGap = 160;
SetText(fontHeading2,c_white,fa_right,fa_middle);
draw_text(room_width/2-vsGap, vsY, playerName[0]);
draw_set_halign(fa_left);
draw_text(room_width/2+vsGap, vsY, playerName[1]);

// Draw host, challenger subtitles
SetText(font0,c_ltgray,fa_right,fa_middle);
draw_text(room_width/2-vsGap,vsY-45,'Host');
draw_set_halign(fa_left);
draw_text(room_width/2+vsGap,vsY-45,'Challenger');

// Draw settings box
setX = 400;
setY = 390;
setW = 500;
setH = 400;
draw_set_color(c_white);
draw_roundrect(setX,setY,setX+setW,setY+setH,1)

// Draw settings
var index = 1;
SetText(font0,c_white,fa_left,fa_top);
draw_text(setX+60,setY+index*50,'Gamemode: '); index++;
draw_text(setX+60,setY+index*50,'First to: X'); index++;
draw_text(setX+60,setY+index*50,'Test setting: '); index++;

// Draw chat box
chatX = 1010;
chatY = setY;
chatW = 500;
chatH = 320;
draw_set_color(c_white);
draw_roundrect(chatX,chatY,chatX+chatW,chatY+chatH,1)
draw_roundrect(chatX,chatY+chatH+6,chatX+chatW,chatY+chatH+70,1)

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
