<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Fade in
// Scene: Logo
// Stars

// Fade out white into next room



timer = 0;
timer2 = 0;
logoFadeIn = room_speed*1.25;
showTime = room_speed*1.8;
fadeOut = room_speed*0.3;
nextRoom = room_speed*3.8;
fadeInAlpha = timer/logoFadeIn;
fadeOutAlpha = (timer-logoFadeIn-showTime+timer2)/fadeOut;


audio_play_sound(snd_xelestial,0,0);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>timer += 1;

if (timer &lt;= nextRoom) {
    fadeInAlpha = timer/logoFadeIn;
    fadeOutAlpha = (timer-logoFadeIn-showTime+timer2)/fadeOut;
}
if (timer &lt; logoFadeIn+showTime) {
    if (mouse_check_button_pressed(mb_any) || keyboard_check_pressed(vk_anykey)) {
        timer = logoFadeIn+showTime;
    }
}

if (floor(timer) == nextRoom) {
    room_goto_next();
    audio_stop_all();
    timer = nextRoom+1;
}

if (timer &gt; nextRoom) {
    fadeOutAlpha = (fadeOut-timer2)/fadeOut;
    timer2 += 1;
    if (fadeOut-timer2 &lt; 0) instance_destroy();
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (timer &lt;= nextRoom) {
    draw_set_alpha(fadeInAlpha);
    draw_sprite(spr_xelestial,0,floor(room_width/2),floor(room_height/2));
}

draw_set_alpha(fadeOutAlpha);
draw_set_color(c_white);
draw_rectangle(0,0,room_width,room_height,0);

draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
